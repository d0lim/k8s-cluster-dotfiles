---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docker-registry-ingress
  namespace: registry
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - host: registry.${DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: docker-registry-service
                port:
                  number: 5000
  tls:
    - secretName: docker-registry-tls
      hosts:
        - registry.${DOMAIN}

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-service
  namespace: registry
  labels:
    run: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
    - protocol: TCP
      port: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      nodeSelector:
        registry: "true"
      containers:
        - name: docker-registry
          image: registry
          ports:
            - containerPort: 5000
              protocol: TCP
          volumeMounts:
            - name: storage
              mountPath: /var/lib/registry
            - name: auth-vol
              mountPath: /auth
              readOnly: true
          env:
            - name: REGISTRY_HTTP_ADDR
              value: :5000
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: /var/lib/registry
            - name: REGISTRY_AUTH
              value: htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: /auth/htpasswd
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: docker-registry-pvc
        - name: auth-vol
          secret:
            secretName: registry-auth-secret
