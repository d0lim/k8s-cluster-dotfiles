apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: registry
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 5000
  selector:
    app: registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: registry
spec:
  selector:
    matchLabels:
      app: registry
  replicas: 1
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: registry:2
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: registry-localstorage-volume
              mountPath: /var/lib/registry
            - name: registry-config-volume
              mountPath: /etc/docker/registry/config.yaml
              subPath: config.yaml
      volumes:
        - name: registry-localstorage-volume
          persistentVolumeClaim:
            claimName: docker-registry-pvc
        - name: registry-config-volume
          configMap:
            name: registry-config
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: registry-ingress
  namespace: registry
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: default-github-ipwhitelist@kubernetescrd, default-redirect-https@kubernetescrd, default-registry-cors@kubernetescrd, default-registry-basic-auth@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - host: registry.${DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: registry
                port:
                  number: 80
  tls:
    - secretName: registry-tls
      hosts:
        - registry.${DOMAIN}
